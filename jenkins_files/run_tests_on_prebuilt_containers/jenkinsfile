node {
   //stage('Clone robot container repo') { // for display purposes
      // Get some code from a GitHub repository
      //checkout poll: false, scm: [$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'b3eb9d33-13f1-4b34-921d-b7636eb61054', url: 'https://github.com/KC-Hybris/qa-robot-container.git']]]
   //}
   
   stage('Clone testsuite from github...') {
       git branch: 'using-docker-slaves',
       credentialsId: 'b3eb9d33-13f1-4b34-921d-b7636eb61054',
       url: 'https://github.com/AnttiYlitepsa/pipeline-tests.git'
       sh('ls -R')
   }

   stage('Set up xvfb container') {
      sh('docker-compose up -d xvfb')
      sh('sleep 2')
      sh('ls -R')
   }
   
   stage('Run robot container with the tests') {
      sh('mkdir -p report')
      //sh('rm -r report || true')
      sh('docker-compose up robotframework')
      
      //stash includes: 'report/', name: 'report'
      sh('sleep 2')
      sh('ls -R')
   }

   stage('Close down the containers') {
      sh('docker-compose down')
      sh('sleep 2')
      sh('docker ps')
   }
   

    stage('Publish results (visible under build)') {
        //This only works properly if the reports actually are published in the report folder!
        step(
        [
        $class : 'RobotPublisher',
        outputPath : 'report/',
        outputFileName : "*.xml",
        disableArchiveOutput : false,
        passThreshold : 100,
        unstableThreshold: 95.0,
        otherFiles : "*.png",
        
        ]
        )
    }
   
    
    
    
}